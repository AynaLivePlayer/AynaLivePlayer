name: Build

on:
  push:
    branches:
      - dev

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 20

    env:
      GOOS: windows
      GOARCH: amd64
      EXECUTABLE: AynaLivePlayer.exe
      CGO_CFLAGS: "-I/mingw64/include"
      CGO_LDFLAGS: "-L/mingw64/lib"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up MSYS2 and install dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-vlc
            mingw-w64-x86_64-mpv

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Tidy go.mod
        run: go mod tidy

      - name: Bundle assets
        run: |
          go install fyne.io/tools/cmd/fyne@latest
          fyne bundle --name resImageIcon --package resource ./assets/icon2.png > ./resource/bundle.go

      - name: Build application
        run: go build -o ./${{ env.EXECUTABLE }} -ldflags -H=windowsgui app/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: ./${{ env.EXECUTABLE }}

  build-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      GOOS: linux
      GOARCH: amd64
      EXECUTABLE: AynaLivePlayer

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvlc-dev vlc libmpv-dev libgl-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgl1-mesa-dev xorg-dev

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Tidy go.mod
        run: go mod tidy

      - name: Bundle assets
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest
          fyne bundle --name resImageIcon --package resource ./assets/icon.png > ./resource/bundle.go

      - name: Build application
        run: go build -o ./${{ env.EXECUTABLE }} app/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-build
          path: ./${{ env.EXECUTABLE }}
